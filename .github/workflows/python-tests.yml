name: python tests+artifacts+release

on:
  pull_request:
  push:
    branches:
    - main
    tags:
    - "v*"
  release:
    types: [published]

jobs:
  dist:
    runs-on: ubuntu-latest
    name: Python sdist/wheel
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      with:
        python-version: "3.9"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade wheel setuptools build

    - name: Build package
      run: python -m build -o dist/
    - uses: actions/upload-artifact@v2
      with:
        name: dist
        path: dist


  test:
    runs-on: ubuntu-latest
    needs: [ dist ]
    strategy:
      fail-fast: false
      matrix:
        python_version: [ '3.7',  '3.9', ]
        dist: [ whl, tar.gz ]

    name: Python ${{ matrix.python_version }} - dist ${{ matrix.dist }}
    steps:
      - uses: actions/checkout@v1
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python_version }}
          architecture: x64
      - uses: actions/download-artifact@v2
        with:
          name: dist
          path: dist
      - run: pip install dist/*.${{ matrix.dist }} pytest
      - run: pytest

  dist_check:
    runs-on: ubuntu-latest
    needs: [dist]
    steps:
    - uses: actions/setup-python@v2
      with:
        python-version: "3.8"
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - run: pipx run twine check --strict dist/*

  dist_upload:

    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    needs: [dist_check, test]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: dist
        path: dist
    - name: Publish package to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        user: __token__
        password: ${{ secrets.pypi_token }}
